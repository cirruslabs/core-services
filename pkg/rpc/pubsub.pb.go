// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pubsub.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FromPublisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Topic on which to publish the messages
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Messages to publish
	Messages []*Message `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *FromPublisher) Reset() {
	*x = FromPublisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromPublisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromPublisher) ProtoMessage() {}

func (x *FromPublisher) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromPublisher.ProtoReflect.Descriptor instead.
func (*FromPublisher) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{0}
}

func (x *FromPublisher) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *FromPublisher) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ToPublisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ToPublisher) Reset() {
	*x = ToPublisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToPublisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToPublisher) ProtoMessage() {}

func (x *ToPublisher) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToPublisher.ProtoReflect.Descriptor instead.
func (*ToPublisher) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{1}
}

type FromSubscriber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*FromSubscriber_SubscriptionRequest_
	//	*FromSubscriber_Ack_
	//	*FromSubscriber_Nack_
	Request isFromSubscriber_Request `protobuf_oneof:"request"`
}

func (x *FromSubscriber) Reset() {
	*x = FromSubscriber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromSubscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromSubscriber) ProtoMessage() {}

func (x *FromSubscriber) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromSubscriber.ProtoReflect.Descriptor instead.
func (*FromSubscriber) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{2}
}

func (m *FromSubscriber) GetRequest() isFromSubscriber_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *FromSubscriber) GetSubscriptionRequest() *FromSubscriber_SubscriptionRequest {
	if x, ok := x.GetRequest().(*FromSubscriber_SubscriptionRequest_); ok {
		return x.SubscriptionRequest
	}
	return nil
}

func (x *FromSubscriber) GetAck() *FromSubscriber_Ack {
	if x, ok := x.GetRequest().(*FromSubscriber_Ack_); ok {
		return x.Ack
	}
	return nil
}

func (x *FromSubscriber) GetNack() *FromSubscriber_Nack {
	if x, ok := x.GetRequest().(*FromSubscriber_Nack_); ok {
		return x.Nack
	}
	return nil
}

type isFromSubscriber_Request interface {
	isFromSubscriber_Request()
}

type FromSubscriber_SubscriptionRequest_ struct {
	SubscriptionRequest *FromSubscriber_SubscriptionRequest `protobuf:"bytes,1,opt,name=subscription_request,json=subscriptionRequest,proto3,oneof"`
}

type FromSubscriber_Ack_ struct {
	Ack *FromSubscriber_Ack `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

type FromSubscriber_Nack_ struct {
	Nack *FromSubscriber_Nack `protobuf:"bytes,3,opt,name=nack,proto3,oneof"`
}

func (*FromSubscriber_SubscriptionRequest_) isFromSubscriber_Request() {}

func (*FromSubscriber_Ack_) isFromSubscriber_Request() {}

func (*FromSubscriber_Nack_) isFromSubscriber_Request() {}

type ToSubscriber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ToSubscriber_SubscriptionResponse_
	//	*ToSubscriber_Message
	Response isToSubscriber_Response `protobuf_oneof:"response"`
}

func (x *ToSubscriber) Reset() {
	*x = ToSubscriber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToSubscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToSubscriber) ProtoMessage() {}

func (x *ToSubscriber) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToSubscriber.ProtoReflect.Descriptor instead.
func (*ToSubscriber) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{3}
}

func (m *ToSubscriber) GetResponse() isToSubscriber_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ToSubscriber) GetSubscriptionResponse() *ToSubscriber_SubscriptionResponse {
	if x, ok := x.GetResponse().(*ToSubscriber_SubscriptionResponse_); ok {
		return x.SubscriptionResponse
	}
	return nil
}

func (x *ToSubscriber) GetMessage() *Message {
	if x, ok := x.GetResponse().(*ToSubscriber_Message); ok {
		return x.Message
	}
	return nil
}

type isToSubscriber_Response interface {
	isToSubscriber_Response()
}

type ToSubscriber_SubscriptionResponse_ struct {
	SubscriptionResponse *ToSubscriber_SubscriptionResponse `protobuf:"bytes,1,opt,name=subscription_response,json=subscriptionResponse,proto3,oneof"`
}

type ToSubscriber_Message struct {
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

func (*ToSubscriber_SubscriptionResponse_) isToSubscriber_Response() {}

func (*ToSubscriber_Message) isToSubscriber_Response() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Opaque message identifier that can be used for ACK/NACK'ing
	//
	// Message identifiers are scoped per each Subscribe() call,
	// so acknowledging a message on a different Subscribe() call
	// will result in an error.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Message payload
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{4}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type FromSubscriber_SubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic              string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	SubscriberGroup    string `protobuf:"bytes,2,opt,name=subscriber_group,json=subscriberGroup,proto3" json:"subscriber_group,omitempty"`
	AckDeadlineSeconds uint64 `protobuf:"varint,3,opt,name=ack_deadline_seconds,json=ackDeadlineSeconds,proto3" json:"ack_deadline_seconds,omitempty"`
}

func (x *FromSubscriber_SubscriptionRequest) Reset() {
	*x = FromSubscriber_SubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromSubscriber_SubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromSubscriber_SubscriptionRequest) ProtoMessage() {}

func (x *FromSubscriber_SubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromSubscriber_SubscriptionRequest.ProtoReflect.Descriptor instead.
func (*FromSubscriber_SubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{2, 0}
}

func (x *FromSubscriber_SubscriptionRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *FromSubscriber_SubscriptionRequest) GetSubscriberGroup() string {
	if x != nil {
		return x.SubscriberGroup
	}
	return ""
}

func (x *FromSubscriber_SubscriptionRequest) GetAckDeadlineSeconds() uint64 {
	if x != nil {
		return x.AckDeadlineSeconds
	}
	return 0
}

type FromSubscriber_Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *FromSubscriber_Ack) Reset() {
	*x = FromSubscriber_Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromSubscriber_Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromSubscriber_Ack) ProtoMessage() {}

func (x *FromSubscriber_Ack) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromSubscriber_Ack.ProtoReflect.Descriptor instead.
func (*FromSubscriber_Ack) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{2, 1}
}

func (x *FromSubscriber_Ack) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type FromSubscriber_Nack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *FromSubscriber_Nack) Reset() {
	*x = FromSubscriber_Nack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromSubscriber_Nack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromSubscriber_Nack) ProtoMessage() {}

func (x *FromSubscriber_Nack) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromSubscriber_Nack.ProtoReflect.Descriptor instead.
func (*FromSubscriber_Nack) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{2, 2}
}

func (x *FromSubscriber_Nack) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type ToSubscriber_SubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ToSubscriber_SubscriptionResponse) Reset() {
	*x = ToSubscriber_SubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pubsub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToSubscriber_SubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToSubscriber_SubscriptionResponse) ProtoMessage() {}

func (x *ToSubscriber_SubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pubsub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToSubscriber_SubscriptionResponse.ProtoReflect.Descriptor instead.
func (*ToSubscriber_SubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_pubsub_proto_rawDescGZIP(), []int{3, 0}
}

var File_pubsub_proto protoreflect.FileDescriptor

var file_pubsub_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b,
	0x0a, 0x0d, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x54,
	0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x22, 0xa2, 0x03, 0x0a, 0x0e, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x58, 0x0a,
	0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x03, 0x61, 0x63, 0x6b,
	0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e,
	0x4e, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x63, 0x6b, 0x1a, 0x88, 0x01, 0x0a,
	0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x12, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0x24, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x1a, 0x25, 0x0a,
	0x04, 0x4e, 0x61, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xb3, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x12, 0x59, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x54, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x16, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x62, 0x0a, 0x06, 0x50, 0x75,
	0x62, 0x53, 0x75, 0x62, 0x12, 0x27, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12,
	0x0e, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x1a,
	0x0c, 0x2e, 0x54, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x2f, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x0f, 0x2e, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x54, 0x6f,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x28, 0x01, 0x30, 0x01, 0x42, 0x47,
	0x42, 0x0b, 0x50, 0x75, 0x62, 0x73, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x69, 0x72, 0x72,
	0x75, 0x73, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x69, 0x72, 0x72, 0x75, 0x73, 0x2d, 0x62, 0x61,
	0x63, 0x6b, 0x62, 0x6f, 0x6e, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pubsub_proto_rawDescOnce sync.Once
	file_pubsub_proto_rawDescData = file_pubsub_proto_rawDesc
)

func file_pubsub_proto_rawDescGZIP() []byte {
	file_pubsub_proto_rawDescOnce.Do(func() {
		file_pubsub_proto_rawDescData = protoimpl.X.CompressGZIP(file_pubsub_proto_rawDescData)
	})
	return file_pubsub_proto_rawDescData
}

var file_pubsub_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pubsub_proto_goTypes = []interface{}{
	(*FromPublisher)(nil),                      // 0: FromPublisher
	(*ToPublisher)(nil),                        // 1: ToPublisher
	(*FromSubscriber)(nil),                     // 2: FromSubscriber
	(*ToSubscriber)(nil),                       // 3: ToSubscriber
	(*Message)(nil),                            // 4: Message
	(*FromSubscriber_SubscriptionRequest)(nil), // 5: FromSubscriber.SubscriptionRequest
	(*FromSubscriber_Ack)(nil),                 // 6: FromSubscriber.Ack
	(*FromSubscriber_Nack)(nil),                // 7: FromSubscriber.Nack
	(*ToSubscriber_SubscriptionResponse)(nil),  // 8: ToSubscriber.SubscriptionResponse
}
var file_pubsub_proto_depIdxs = []int32{
	4, // 0: FromPublisher.messages:type_name -> Message
	5, // 1: FromSubscriber.subscription_request:type_name -> FromSubscriber.SubscriptionRequest
	6, // 2: FromSubscriber.ack:type_name -> FromSubscriber.Ack
	7, // 3: FromSubscriber.nack:type_name -> FromSubscriber.Nack
	8, // 4: ToSubscriber.subscription_response:type_name -> ToSubscriber.SubscriptionResponse
	4, // 5: ToSubscriber.message:type_name -> Message
	0, // 6: PubSub.Publish:input_type -> FromPublisher
	2, // 7: PubSub.Subscribe:input_type -> FromSubscriber
	1, // 8: PubSub.Publish:output_type -> ToPublisher
	3, // 9: PubSub.Subscribe:output_type -> ToSubscriber
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pubsub_proto_init() }
func file_pubsub_proto_init() {
	if File_pubsub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pubsub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromPublisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToPublisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromSubscriber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToSubscriber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromSubscriber_SubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromSubscriber_Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromSubscriber_Nack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pubsub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToSubscriber_SubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pubsub_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*FromSubscriber_SubscriptionRequest_)(nil),
		(*FromSubscriber_Ack_)(nil),
		(*FromSubscriber_Nack_)(nil),
	}
	file_pubsub_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ToSubscriber_SubscriptionResponse_)(nil),
		(*ToSubscriber_Message)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pubsub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pubsub_proto_goTypes,
		DependencyIndexes: file_pubsub_proto_depIdxs,
		MessageInfos:      file_pubsub_proto_msgTypes,
	}.Build()
	File_pubsub_proto = out.File
	file_pubsub_proto_rawDesc = nil
	file_pubsub_proto_goTypes = nil
	file_pubsub_proto_depIdxs = nil
}
